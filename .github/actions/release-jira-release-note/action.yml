name: Release Jira release note
description: 'Update jira release note after a new version is depolyed'
inputs:
  version:
    description: 'tag name of version'
    required: true
 

runs:
  using: 'composite'
  steps:
    - name: Check out repo
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: |
          npm install
          npm list
        shell: bash

      - name: download version artifact and get saved version
        uses: actions/download-artifact@v4
        with:
          name: github-pages
      
      - name: read versionData file
        run: |
          cat ./src/version.txt
          echo "versionName=$(cat ./src/version.txt)" >> $GITHUB_ENV
          # 試試看versionName和input.version是否相同
          echo $verionName

      - name: get id of release version
        id: get_version
        uses: ./.github/actions/get-jira-project-version
        with:
          jiraDomain: ${{secrets.JIRA_DOMAIN}}
          jiraToken: ${{secrets.JIRA_TOKEN}}
          projectKey: TGA
          versionName: ${{ inputs.version }}
          # versionName: $versionName

      - name: print version
        run: |
          echo ${{steps.get_version.outputs.versionId}}
          # 不論觸發時機，一直得到master
          echo ${{github.ref_name}}

      - name: update jira release note
        uses: ./.github/actions/update-release-note
        with:
          jiraDomain: ${{secrets.JIRA_DOMAIN}}
          jiraToken: ${{secrets.JIRA_TOKEN}}
          versionId:  ${{steps.get_version.outputs.versionId}}
          projectId: 10001